{
  "name": "bookie",
  "author": "Peerplays Blockchain Standards Association",
  "description": "Electron app powered by CRA",
  "version": "1.3.2",
  "private": true,
  "homepage": "./",
  "devDependencies": {
    "@babel/core": "^7.13.14",
    "@babel/eslint-parser": "^7.13.14",
    "@babel/eslint-plugin": "^7.13.10",
    "@babel/preset-env": "^7.13.12",
    "@babel/runtime": "^7.13.10",
    "@commitlint/cli": "^12.1.0",
    "@commitlint/config-conventional": "^7.6.0",
    "antd": "^4.15.0",
    "babel-jest": "^26.6.3",
    "babel-loader": "^8.2.2",
    "babel-plugin-import": "^1.13.3",
    "case-sensitive-paths-webpack-plugin": "^2.4.0",
    "chai": "^4.3.4",
    "chalk": "1.1.3",
    "commitizen": "^4.2.3",
    "connect-history-api-fallback": "1.3.0",
    "copy-to-clipboard": "~3.0.5",
    "cross-spawn": "4.0.2",
    "crypto-browserify": "^3.12.0",
    "css-loader": "^5.2.0",
    "cssnano": "^4.1.10",
    "cz-conventional-changelog": "^2.1.0",
    "dateformat": "~2.0.0",
    "detect-port": "1.0.1",
    "dotenv": "2.0.0",
    "electron": "^12.0.2",
    "electron-builder": "^22.10.5",
    "enzyme": "~2.7.1",
    "eslint": "^7.23.0",
    "eslint-config-react-app": "^6.0.0",
    "eslint-plugin-flowtype": "^5.4.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-prettier": "^3.3.1",
    "eslint-plugin-react": "^7.23.1",
    "eslint-plugin-react-hooks": "^4.2.0",
    "eslint-webpack-plugin": "^2.5.3",
    "excel-export": "~0.5.1",
    "file-loader": "^6.2.0",
    "filesize": "3.3.0",
    "foreman": "^3.0.1",
    "fs": "0.0.1-security",
    "fs-extra": "0.30.0",
    "gzip-size": "3.0.0",
    "html-webpack-plugin": "^5.3.1",
    "http-proxy-middleware": "^1.1.0",
    "husky": "^1.3.1",
    "immutable": "^4.0.0-rc.12",
    "inquirer": "^8.0.0",
    "jest": "^26.6.3",
    "jsdom": "~9.11.0",
    "json-loader": "^0.5.7",
    "less": "^4.1.1",
    "less-loader": "^8.0.0",
    "lint-staged": "^8.2.1",
    "localforage": "~1.5.0",
    "lodash": "^4.17.21",
    "loglevel": "~1.4.1",
    "moment": "^2.29.1",
    "numeral": "~2.0.4",
    "object-assign": "4.1.1",
    "peerplaysjs-lib": "^0.6.0",
    "perfect-scrollbar": "~0.6.11",
    "postcss": "^8.2.9",
    "postcss-import": "^14.0.1",
    "postcss-loader": "^5.2.0",
    "prettier": "^1.19.1",
    "promise": "7.1.1",
    "promise-queue": "~2.2.3",
    "prop-types": "^15.7.2",
    "qrcode.react": "^1.0.1",
    "randomstring": "~1.1.5",
    "rc": "^1.2.8",
    "react": "^17.0.2",
    "react-addons-test-utils": "^15.6.2",
    "react-dev-utils": "^11.0.4",
    "react-dom": "^17.0.2",
    "react-infinity-menu": "^4.0.0",
    "react-modal": "^2.4.1",
    "react-redux": "^7.2.3",
    "react-redux-i18n": "^1.9.3",
    "react-router": "^5.2.0",
    "react-scripts": "^4.0.3",
    "react-scroll": "^1.8.2",
    "react-select": "^1.0.1",
    "react-split-pane": "^0.1.63",
    "react-table": "^7.6.3",
    "react-test-renderer": "^17.0.2",
    "recursive-readdir": "2.1.0",
    "redux": "^4.0.5",
    "redux-devtools-extension": "^2.13.9",
    "redux-form": "^8.3.7",
    "redux-immutable": "^4.0.0",
    "redux-mock-store": "^1.5.4",
    "redux-persist": "^6.0.0",
    "redux-persist-immutable": "^4.3.1",
    "redux-thunk": "^2.3.0",
    "reselect": "~3.0.0",
    "rxjs": "^5.4.2",
    "sinon": "^10.0.0",
    "standard-version": "^9.1.1",
    "stream-browserify": "^3.0.0",
    "strip-ansi": "3.0.1",
    "style-loader": "^2.0.0",
    "stylelint": "^13.12.0",
    "stylelint-order": "^3.1.1",
    "terser-webpack-plugin": "^5.1.1",
    "url-loader": "^4.1.1",
    "webpack": "^5.28.0",
    "webpack-cli": "^4.6.0",
    "webpack-dev-server": "^3.11.2",
    "webpack-manifest-plugin": "^3.1.0",
    "whatwg-fetch": "2.0.2"
  },
  "dependencies": {
    "connected-react-router": "^6.9.1",
    "electron-is-dev": "0.3.0",
    "history": "4.10.1"
  },
  "main": "src/index.js",
  "scripts": {
    "stylelint": "stylelint **/*.less",
    "sonar": "node scripts/sonar.js",
    "init": "npm install commitizen -g && npm i",
    "start": "node scripts/start.js",
    "commit": "git-cz",
    "preinstall": "npx npm-force-resolutions",
    "pre-release": "npm run release -- --prerelease rc",
    "release": "standard-version",
    "release-major": "npm run release -- --release-as major",
    "release-minor": "npm run release -- --release-as minor",
    "release-patch": "npm run release -- --release-as patch",
    "test": "jest",
    "updateSnapshot": "jest --updateSnapshot",
    "build": "npm run clean && node scripts/build.js",
    "electron": "electron build/electron.js",
    "clean": "rm -rf build/* && rm -rf dist",
    "make-build": "mkdir -p build",
    "copy:electron": "npm run make-build && cp electron.js build/",
    "compile": "npm run copy:electron",
    "dist": "npm run compile && electron-builder -wm",
    "dist-linux": "npm run compile && electron-builder -l",
    "live": "npm run copy:electron && ELECTRON_IS_DEV=1 electron build/electron.js"
  },
  "jest": {
    "verbose": true,
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js",
      "<rootDir>/config/jest-test-setup.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>[/\\\\](build|docs|node_modules|scripts)[/\\\\]"
    ],
    "testEnvironment": "node",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "linters": {
      "src/**/*.{js,jsx}": [
        "eslint --fix",
        "git add"
      ],
      "src/**/*.less": [
        "stylelint --fix",
        "git add"
      ]
    },
    "ignore": [
      "**/build/*.min.js",
      "**/dist/*.min.js"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "babel": {
    "presets": [
      "@babel/preset-env",
      "@babel/preset-react"
    ],
    "plugins": [
      [
        "import",
        {
          "libraryName": "antd",
          "libraryDirectory": "lib"
        },
        "antd"
      ]
    ]
  },
  "resolutions": {
    "kind-of": ">=6.0.3"
  }
}
